=Module <<a_api_type | module Ocsigen_http_client >> =
<<div class="code"|<<span class="keyword"|module>> Ocsigen_http_client: <<span class='code'|sig>><<a_api text=".." | module Ocsigen_http_client >><<span class='code'|end>>>>~Using ~Ocsigen as a ~H~T~T~P client\\

----
<<div id="VALget" class="code"|<<span class="keyword"|val>> get : <<span class="code type"|\\{{{   }}}?https:bool ->\\{{{   }}}  ?port:int -> host:string -> uri:string -> unit -> <<a_api text="Ocsigen_http_frame.t" | type Ocsigen_http_frame.t >> Lwt.t>>>><<div class="info"|~E~X~P~E~R~I~M~E~N~T~A~L ~-~- ~May evolve in the future~. ~Do a ~G~E~T ~H~T~T~P request~.
   ~The default port is ~8~0 for ~H~T~T~P~, ~4~4~3 for ~H~T~T~P~S~.
   ~The default protocol is http ~(<<span class='code'|https~=false>>~)~.\\
>>
<<div id="VALraw_request" class="code"|<<span class="keyword"|val>> raw~_request : <<span class="code type"|\\{{{   }}}?client:<<a_api text="Ocsigen_extensions.client" | type Ocsigen_extensions.client >> ->\\{{{   }}}  ?keep_alive:bool ->\\{{{   }}}  ?headers:Http_headers.t ->\\{{{   }}}  ?https:bool ->\\{{{   }}}  ?port:int ->\\{{{   }}}  content:string <<a_api text="Ocsigen_stream.t" | type Ocsigen_stream.t >> option ->\\{{{   }}}  ?content_length:int64 ->\\{{{   }}}  http_method:<<a_api text="Ocsigen_http_frame.Http_header.http_method" | type Ocsigen_http_frame.Http_header.http_method >> ->\\{{{   }}}  host:string ->\\{{{   }}}  inet_addr:Unix.inet_addr ->\\{{{   }}}  uri:string -> unit -> unit -> <<a_api text="Ocsigen_http_frame.t" | type Ocsigen_http_frame.t >> Lwt.t>>>><<div class="info"|~Do an ~H~T~T~P request ~(low level~)~.\\


   ~If the optional argument <<span class='code'|headers>> is present~, no headers will be
   added by ~Ocsigen~, but those in this argument and host~, and
   <<span class='code'|connection~: close>> or <<span class='code'|connection~: keep~-alive>>~.
   ~Be carefull to respect ~H~T~T~P~/~1~.~1 in this case!\\


   ~The default port is ~8~0 for ~H~T~T~P~, ~4~4~3 for ~H~T~T~P~S~.\\


   ~The default protocol is http ~(<<span class='code'|https~=false>>~)~.\\


   ~The optional parameter <<span class='code'|~~keep~_alive>> asks to keep the connection opened
   after the request for a short amount of time
   to allow other requests to the same server to use the same connection~.
   ~It is true by default~.
   ~If there is one opened free connection~, we will use it instead of opening
   a new one~.\\


   ~If you do this request to serve it later to a client or to generate a page
   for a client~, add the optional parameter <<span class='code'|~~client>>~.
   ~Thus~, the request you do will be pipelined
   with other requests coming from the same connection~.
   ~A request will never be pipelined after a request from another client
   connection~.
   ~Pipelining will be used only for requests to server we know supporting it
   ~(according to previous requests~)~.
   ~It is recommended to specify this optional parameter for all requests
   ~(with the value found in field
   <<span class='code'|ri~_client>> of type <<a_api | type Ocsigen_extensions.request_info >>~)~.\\


   ~The optional parameter <<span class='code'|~?head>> asks to do a <<span class='code'|~H~E~A~D>> ~H~T~T~P request~.
   ~It is <<span class='code'|false>> by default~.\\


    ~When called without the last parameter~, the function will pipeline
    the request ~(if needed~)~, then return the function to get the page~.
    ~This allows to keep pipeline order when writing an extension~.\\
>>
<<div id="VALbasic_raw_request" class="code"|<<span class="keyword"|val>> basic~_raw~_request : <<span class="code type"|\\{{{   }}}?headers:Http_headers.t ->\\{{{   }}}  ?https:bool ->\\{{{   }}}  ?port:int ->\\{{{   }}}  content:string <<a_api text="Ocsigen_stream.t" | type Ocsigen_stream.t >> option ->\\{{{   }}}  ?content_length:int64 ->\\{{{   }}}  http_method:<<a_api text="Ocsigen_http_frame.Http_header.http_method" | type Ocsigen_http_frame.Http_header.http_method >> ->\\{{{   }}}  host:string ->\\{{{   }}}  inet_addr:Unix.inet_addr -> uri:string -> unit -> <<a_api text="Ocsigen_http_frame.t" | type Ocsigen_http_frame.t >> Lwt.t>>>><<div class="info"|~Same as <<a_api | val Ocsigen_http_client.raw_request >>~, but does not try to reuse connections~.
    ~Opens a new connections for each request~. ~Much less efficient~.\\
>>
