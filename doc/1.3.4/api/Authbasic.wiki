=Module <<a_api_type | module Authbasic >> =
<<div class="code"|<<span class="keyword"|module>> Authbasic: <<span class='code'|sig>><<a_api text=".." | module Authbasic >><<span class='code'|end>>>>~Module <<span class='code'|~Authbasic>>~: ~Basic ~H~T~T~P ~Authentication~.\\

----
\\
~This module implements ~Basic ~H~T~T~P ~Authentication as described in
    [[http://www.ietf.org/rfc/rfc2617.txt|~R~F~C ~2~6~1~7]]~.  ~It can be used
    to add an authentication layer to sites with no built~-in
    authentication ~(e~.g~. static files~)~. ~Beware~, passwords are
    transmitted in cleartext with this scheme~, so the medium should be
    secured somehow ~(by e~.g~. ~S~S~L~)~.\\


    ~This module implements only the ~H~T~T~P~-related part of the protocol~,
    and is meant to be extended with various authentication schemes~. ~A
    very naive one ~(authentication with a single user~/password~, given
    in the configuration file~) is provided~.\\
<<div id="VALregister_basic_authentication_method" class="code"|<<span class="keyword"|val>> register~_basic~_authentication~_method : <<span class="code type"|(<<a_api text="Simplexmlparser.xml" | type Simplexmlparser.xml >> -> string -> string -> bool Lwt.t) -> unit>>>><<div class="info"|~This function registers an authentication plugin~: it adds a new
      parser to the list of available authentication schemes~.\\


      ~A parser takes as argument an ~X~M~L tree ~(corresponding to the
      first son of an ~<authbasic~> element in the configuration
      file~) and returns an authentication function <<span class='code'|f>>~. <<span class='code'|f>> will be
      called for each request with the supplied user and password and
      should return ~(cooperatively~) a boolean telling whether access
      is granted or not~. ~Exceptions are handled the same way as for
      extension parsers~.\\


      ~The ~<authbasic~> element must have a //realm// attribute~,
      giving some identifier to the resource which is protected
      ~(several resources on the same hostname can share the same
      realm~)~. ~This gives a general customization scheme "for free"
      from the point of view of plugin developers and is totally
      transparent to the plugin~.\\
>>
<<div id="VALget_basic_authentication_method" class="code"|<<span class="keyword"|val>> get~_basic~_authentication~_method : <<span class="code type"|<<a_api text="Simplexmlparser.xml" | type Simplexmlparser.xml >> -> string -> string -> bool Lwt.t>>>><<div class="info"|~This function combines all the parsers registered with
      <<span class='code'|register~_basic~_authentication~_method>>~. ~It might be useful for
      other extensions~. ~Not for the casual user~.\\
>>
