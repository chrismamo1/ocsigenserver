=Module <<a_api_type | module Ocsigen_LocalFiles >> =
<<div class="code"|<<span class="keyword"|module>> Ocsigen_LocalFiles: <<span class='code'|sig>><<a_api text=".." | module Ocsigen_LocalFiles >><<span class='code'|end>>>>~The requested file does not exists\\

----
<<div  id="EXCEPTIONFailed_404" class="code"|<<span class="keyword"|exception>> Failed_404>>
<<div class="info"|~The requested file cannot be served~: does not exists~, not
    enough permissions ~.~.~.\\
>>
<<div  id="EXCEPTIONFailed_403" class="code"|<<span class="keyword"|exception>> Failed_403>>
<<div class="info"|~The file is a directory which we should not display\\
>>
<<div  id="EXCEPTIONNotReadableDirectory" class="code"|<<span class="keyword"|exception>> NotReadableDirectory>>
<<div class="code" id="TYPEresolved"|<<span class="keyword"|type>> resolved = 
|@@class="typetable"@ @class="lefttop"@@<<span class="keyword"|{{{|}}}>>|@@class="lefttop"@@<<span class="constructor"|RFile>> <<span class="keyword"|of>> <<span class="code type"|string>>|
|@@class="lefttop"@@<<span class="keyword"|{{{|}}}>>|@@class="lefttop"@@<<span class="constructor"|RDir>> <<span class="keyword"|of>> <<span class="code type"|string>>|>>
<<div class="info"|~Local file corresponding to a request~. ~The string argument
   represents the real file or directory to serve~, eg~. foo~/index~.html
   instead of foo\\
>>

<<div id="VALresolve" class="code"|<<span class="keyword"|val>> resolve : <<span class="code type"|\\{{{   }}}?no_check_for:string ->\\{{{   }}}  request:<<a_api text="Ocsigen_extensions.request" | type Ocsigen_extensions.request >> ->\\{{{   }}}  filename:string -> <<a_api text="resolved" | type Ocsigen_LocalFiles.resolved >>>>>><<div class="info"|~Finds <<span class='code'|filename>> in the filesystem~, with a possible redirection
    if it is a directory~. ~Takes into account the fact that <<span class='code'|filename>>
    does not exists~, is a symlink or is a directory~, and raises
    ~Failed~_~4~0~4 or ~Failed~_~4~0~3 accordingly~. <<span class='code'|no~_check~_for>> is supposed
    to be a prefix of <<span class='code'|filename>> ~; directories above <<span class='code'|no~_check~_for>>
    are not checked for symlinks\\
>>
<<div id="VALcontent" class="code"|<<span class="keyword"|val>> content : <<span class="code type"|\\{{{   }}}request:<<a_api text="Ocsigen_extensions.request" | type Ocsigen_extensions.request >> ->\\{{{   }}}  file:<<a_api text="resolved" | type Ocsigen_LocalFiles.resolved >> -> <<a_api text="Ocsigen_http_frame.result" | type Ocsigen_http_frame.result >> Lwt.t>>>><<div class="info"|~Given the local file <<span class='code'|file>>~, with a request originating at url
    <<span class='code'|url>>~, returns a viewable content of <<span class='code'|file>>~. ~Currently~, the <<span class='code'|url>>
    parameter is used only if <<span class='code'|url>> is a directory\\
>>
