<<code language="ocaml" | sig
  type t = IPv4 of int32 | IPv6 of int64 * int64
  val parse :
    string -> Ocsigen_lib.Ip_address.t * Ocsigen_lib.Ip_address.t option
  val match_ip :
    Ocsigen_lib.Ip_address.t * Ocsigen_lib.Ip_address.t option ->
    Ocsigen_lib.Ip_address.t -> bool
  val network_of_ip :
    Ocsigen_lib.Ip_address.t ->
    int32 -> int64 * int64 -> Ocsigen_lib.Ip_address.t
  exception No_such_host
  val inet6_addr_loopback : Ocsigen_lib.Ip_address.t
  val get_inet_addr : string -> Unix.inet_addr Lwt.t
end >>