<<code language="ocaml" | sig
  type ('a, +'b, +'c) params_type
  type 'a param_name
  type 'a setoneradio = [ `One of 'a | `Radio of 'a | `Set of 'a ]
  type 'a oneradio = [ `One of 'a | `Radio of 'a ]
  type 'a setone = [ `One of 'a | `Set of 'a ]
  type ('a, 'b) binsum = Inj1 of 'a | Inj2 of 'b
  type 'a listnames = {
    it : 'b 'c. ('a -> 'b -> 'c list) -> 'b list -> 'c list -> 'c list;
  }
  val int :
    string ->
    (int, [ `WithoutSuffix ], [ `One of int ] Eliom_parameters.param_name)
    Eliom_parameters.params_type
  val int32 :
    string ->
    (int32, [ `WithoutSuffix ],
     [ `One of int32 ] Eliom_parameters.param_name)
    Eliom_parameters.params_type
  val int64 :
    string ->
    (int64, [ `WithoutSuffix ],
     [ `One of int64 ] Eliom_parameters.param_name)
    Eliom_parameters.params_type
  val float :
    string ->
    (float, [ `WithoutSuffix ],
     [ `One of float ] Eliom_parameters.param_name)
    Eliom_parameters.params_type
  val string :
    string ->
    (string, [ `WithoutSuffix ],
     [ `One of string ] Eliom_parameters.param_name)
    Eliom_parameters.params_type
  val bool :
    string ->
    (bool, [ `WithoutSuffix ], [ `One of bool ] Eliom_parameters.param_name)
    Eliom_parameters.params_type
  val file :
    string ->
    (Ocsigen_extensions.file_info, [ `WithoutSuffix ],
     [ `One of Ocsigen_extensions.file_info ] Eliom_parameters.param_name)
    Eliom_parameters.params_type
  val unit : (unit, [ `WithoutSuffix ], unit) Eliom_parameters.params_type
  val user_type :
    (string -> 'a) ->
    ('a -> string) ->
    string ->
    ('a, [ `WithoutSuffix ], [ `One of 'a ] Eliom_parameters.param_name)
    Eliom_parameters.params_type
  type coordinates = { abscissa : int; ordinate : int; }
  val coordinates :
    string ->
    (Eliom_parameters.coordinates, [ `WithoutSuffix ],
     [ `One of Eliom_parameters.coordinates ] Eliom_parameters.param_name)
    Eliom_parameters.params_type
  val string_coordinates :
    string ->
    (string * Eliom_parameters.coordinates, [ `WithoutSuffix ],
     [ `One of string * Eliom_parameters.coordinates ]
     Eliom_parameters.param_name)
    Eliom_parameters.params_type
  val int_coordinates :
    string ->
    (int * Eliom_parameters.coordinates, [ `WithoutSuffix ],
     [ `One of int * Eliom_parameters.coordinates ]
     Eliom_parameters.param_name)
    Eliom_parameters.params_type
  val int32_coordinates :
    string ->
    (int32 * Eliom_parameters.coordinates, [ `WithoutSuffix ],
     [ `One of int32 * Eliom_parameters.coordinates ]
     Eliom_parameters.param_name)
    Eliom_parameters.params_type
  val int64_coordinates :
    string ->
    (int64 * Eliom_parameters.coordinates, [ `WithoutSuffix ],
     [ `One of int64 * Eliom_parameters.coordinates ]
     Eliom_parameters.param_name)
    Eliom_parameters.params_type
  val float_coordinates :
    string ->
    (float * Eliom_parameters.coordinates, [ `WithoutSuffix ],
     [ `One of float * Eliom_parameters.coordinates ]
     Eliom_parameters.param_name)
    Eliom_parameters.params_type
  val user_type_coordinates :
    (string -> 'a) ->
    ('a -> string) ->
    string ->
    ('a * Eliom_parameters.coordinates, [ `WithoutSuffix ],
     [ `One of 'a * Eliom_parameters.coordinates ]
     Eliom_parameters.param_name)
    Eliom_parameters.params_type
  val ( ** ) :
    ('a, [ `WithoutSuffix ], 'b) Eliom_parameters.params_type ->
    ('c, [< `Endsuffix | `WithoutSuffix ] as 'd, 'e)
    Eliom_parameters.params_type ->
    ('a * 'c, 'd, 'b * 'e) Eliom_parameters.params_type
  val prod :
    ('a, [ `WithoutSuffix ], 'b) Eliom_parameters.params_type ->
    ('c, [< `Endsuffix | `WithoutSuffix ] as 'd, 'e)
    Eliom_parameters.params_type ->
    ('a * 'c, 'd, 'b * 'e) Eliom_parameters.params_type
  val sum :
    ('a, [ `WithoutSuffix ], 'b) Eliom_parameters.params_type ->
    ('a, [ `WithoutSuffix ], 'b) Eliom_parameters.params_type ->
    (('a, 'a) Eliom_parameters.binsum, [ `WithoutSuffix ], 'b * 'b)
    Eliom_parameters.params_type
  val opt :
    ('a, [ `WithoutSuffix ], 'b) Eliom_parameters.params_type ->
    ('a option, [ `WithoutSuffix ], 'b) Eliom_parameters.params_type
  val radio :
    (string ->
     ('a, [ `WithoutSuffix ], [ `One of 'b ] Eliom_parameters.param_name)
     Eliom_parameters.params_type) ->
    string ->
    ('a option, [ `WithoutSuffix ],
     [ `Radio of 'b ] Eliom_parameters.param_name)
    Eliom_parameters.params_type
  val any :
    ((string * string) list, [ `WithoutSuffix ], unit)
    Eliom_parameters.params_type
  val set :
    (string ->
     ('a, [ `WithoutSuffix ], [ `One of 'b ] Eliom_parameters.param_name)
     Eliom_parameters.params_type) ->
    string ->
    ('a list, [ `WithoutSuffix ], [ `Set of 'b ] Eliom_parameters.param_name)
    Eliom_parameters.params_type
  val list :
    string ->
    ('a, [ `WithoutSuffix ], 'b) Eliom_parameters.params_type ->
    ('a list, [ `WithoutSuffix ], 'b Eliom_parameters.listnames)
    Eliom_parameters.params_type
  val regexp :
    Netstring_pcre.regexp ->
    string ->
    string ->
    (string, [ `WithoutSuffix ],
     [ `One of string ] Eliom_parameters.param_name)
    Eliom_parameters.params_type
  val suffix :
    ('a, [< `Endsuffix | `WithoutSuffix ], 'b) Eliom_parameters.params_type ->
    ('a, [ `WithSuffix ], 'b) Eliom_parameters.params_type
  val all_suffix :
    string ->
    (string list, [ `Endsuffix ],
     [ `One of string list ] Eliom_parameters.param_name)
    Eliom_parameters.params_type
  val all_suffix_string :
    string ->
    (string, [ `Endsuffix ], [ `One of string ] Eliom_parameters.param_name)
    Eliom_parameters.params_type
  val all_suffix_user :
    (string -> 'a) ->
    ('a -> string) ->
    string ->
    ('a, [ `Endsuffix ], [ `One of 'a ] Eliom_parameters.param_name)
    Eliom_parameters.params_type
  val all_suffix_regexp :
    Netstring_pcre.regexp ->
    string ->
    string ->
    (string, [ `Endsuffix ], [ `One of string ] Eliom_parameters.param_name)
    Eliom_parameters.params_type
  val suffix_prod :
    ('a, [< `Endsuffix | `WithoutSuffix ], 'b) Eliom_parameters.params_type ->
    ('c, [ `WithoutSuffix ], 'd) Eliom_parameters.params_type ->
    ('a * 'c, [ `WithSuffix ], 'b * 'd) Eliom_parameters.params_type
  val contains_suffix : ('a, 'b, 'c) Eliom_parameters.params_type -> bool
  val add_pref_params :
    string ->
    ('a, 'b, 'c) Eliom_parameters.params_type ->
    ('a, 'b, 'c) Eliom_parameters.params_type
  val construct_params :
    ('a, [< `WithSuffix | `WithoutSuffix ], 'b) Eliom_parameters.params_type ->
    'a -> string list option * string
  val construct_params_string : (string * string) list -> string
  val construct_params_list :
    ('a, [< `WithSuffix | `WithoutSuffix ], 'b) Eliom_parameters.params_type ->
    'a -> string list option * (string * string) list
  val reconstruct_params :
    ('a, [< `WithSuffix | `WithoutSuffix ], 'b) Eliom_parameters.params_type ->
    (string * string) list ->
    (string * Ocsigen_extensions.file_info) list -> string list -> 'a
  type anon_params_type = int
  val anonymise_params_type :
    ('a, 'b, 'c) Eliom_parameters.params_type ->
    Eliom_parameters.anon_params_type
  val remove_prefixed_param :
    string -> (string * 'a) list -> (string * 'a) list
  val make_params_names : ('a, 'b, 'c) Eliom_parameters.params_type -> 'c
  val string_of_param_name : 'a Eliom_parameters.param_name -> string
end >>